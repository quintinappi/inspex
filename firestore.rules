rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // TEMPORARY: Open for development - SECURE BEFORE PRODUCTION!
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Purchase orders - admins and inspectors
    match /purchase_orders/{poId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'inspector'];
    }
    
    // Doors - admins, inspectors, and engineers can read/write
    match /doors/{doorId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'inspector', 'engineer'];
    }
    
    // Door inspections - admins and inspectors
    match /door_inspections/{inspectionId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'inspector'];
    }
    
    // Inspection checks - admins and inspectors
    match /inspection_checks/{checkId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'inspector'];
    }
    
    // Certifications - all authenticated users can read, engineers and admins can write
    match /certifications/{certId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'engineer'];
    }
    
    // Inspection points - authenticated users can read/write
    match /inspection_points/{pointId} {
      allow read, write: if request.auth != null;
    }

    // System config - admin only
    match /system_config/{configId} {
      allow read, write: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Config collection - admin only
    match /config/{configId} {
      allow read, write: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection - admins can read/write all, users can read their own
    match /users/{userId} {
      allow read: if request.auth != null &&
        (request.auth.uid == userId ||
         (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'));
      allow write: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}